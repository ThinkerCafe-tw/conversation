好的，這是一份根據您提供的詳細技術計畫書生成的產品需求文件（Product Requirements Document, PRD）。

---

## 產品需求文件 (PRD)：哨兵 (Sentry)

| 文件版本 | 1.0 |
| :--- | :--- |
| **專案名稱** | 哨兵 (Sentry) - LINE 智慧摘要助理 |
| **狀態** | 草稿 (Draft) |
| **建立日期** | 2025年6月15日 |
| **產品負責人** | Cruz Tang |
| **核心團隊** | Rhaenyra Vivian Leo Avery Max |

---

### 1. 專案概述 (Overview)

「哨兵」是一個專為 LINE 設計的智慧助理機器人。其核心功能是自動監聽指定群組的對話，並每小時提供一次由 AI (Google Gemini) 生成的對話重點摘要。本專案旨在解決活躍群組中「訊息過多、無法追蹤、重要資訊被淹沒」的核心痛點，讓使用者能快速掌握對話核心，無需爬文或中斷他人詢問。

本專案最重要的設計原則是「隱私優先」，我們將透過創新的**資料匿名化**技術，在不儲存任何用戶身份資訊的前提下完成摘要任務。

### 2. 產品目標與成功指標 (Goals & Success Metrics)

#### 2.1. 產品目標

* **使用者目標：** 顯著降低使用者追蹤 LINE 群組訊息的時間成本與心力負擔，確保他們不會錯過關鍵討論。
* **商業目標：**
    1.  **快速交付價值 (MVP)：** 快速推出能立即解決市場痛點的最小可行性產品，驗證市場需求。
    2.  **技術能力驗證：** 向市場與潛在客戶展示我們整合通訊平台 (LINE) 與大型語言模型 (Gemini) 的技術實力，特別是在隱私保護方面的成熟設計。
    3.  **奠定未來基礎：** 將「哨兵」作為後續更複雜 AI 產品的灘頭堡與活 DEMO，吸引早期用戶與合作夥伴。

#### 2.2. 成功指標 (KPIs)

* **用戶採用率：**
    * 上線後三個月內，有效服務的 LINE 群組數量達到 [請填寫目標數，如：50個]。
* **用戶活躍度：**
    * 每日成功生成並發送的摘要數量。
    * 用戶留存率（機器人被持續保留在群組內的比例）。
* **系統性能與可靠性：**
    * 摘要生成與發送的端到端時間應低於 [請填寫目標時間，如：90秒]。
    * 服務可用性 (Uptime) > 99.9%。
* **摘要品質 (質化指標)：**
    * 通過用戶訪談或問卷，評估摘要的準確性與實用性。

### 3. 目標用戶與使用場景 (Target Audience & Use Cases)

#### 3.1. 目標用戶

* **專案團隊/工作群組：** 在 LINE 上進行高頻率討論，需要快速同步專案進度、待辦事項的團隊。
* **社群/興趣群組：** 討論熱烈，但成員因時差或工作無法即時參與，希望能快速跟上話題的社群。
* **家庭/朋友群組：** 希望能輕鬆了解親友近況，但不想被大量日常閒聊淹沒的使用者。

#### 3.2. 核心使用場景

* **場景一：會議前的快速同步**
    * **用戶故事：** 作為一名專案經理，我即將加入一個已進行一小時的線上討論，我希望能在會議開始前快速瀏覽過去一小時的對話摘要，以便立即進入狀況，而不是打斷大家問「前面講了什麼」。
* **場景二：早晨的資訊追蹤**
    * **用戶故事：** 作為一名跨時區團隊的成員，我希望每天早上第一件事就是看到在我睡覺期間，團隊群組裡所有重要討論的摘要，這樣我就可以快速掌握進度並開始工作。

### 4. 功能需求 (Functional Requirements)

#### 4.1. 核心功能：自動摘要流程

| ID | 功能 | 描述 |
| :--- | :--- | :--- |
| FR-1 | **LINE Bot 整合** | 使用者可以將「哨兵」機器人像一般用戶一樣邀請加入任何 LINE 群組。 |
| FR-2 | **訊息接收** | 系統必須能接收到被加入群組中的所有公開文本訊息。 |
| FR-3 | **用戶匿名化** | 在訊息被處理前，系統必須將發送者的真實 LINE `userId` 替換為臨時、無意義的假名 (如：使用者A, 使用者B)。此假名與真實用戶的映射關係必須在摘要週期結束後自動銷毀。**真實 `userId` 絕不能被寫入永久或長期儲存**。 |
| FR-4 | **對話暫存** | 系統需按時間順序，暫時儲存過去一小時內經過匿名化處理的對話紀錄。 |
| FR-5 | **定時觸發** | 系統需在每個小時的整點 (例如 08:00, 09:00) 自動觸發一次摘要任務。 |
| FR-6 | **AI 摘要生成** | 系統將暫存的匿名化對話紀錄，發送給 Google Gemini API，並根據預設的提示詞 (Prompt) 生成一段 50-100 字的條列式重點摘要。 |
| FR-7 | **摘要發送** | 系統將 AI 生成的摘要文本，以公開訊息的形式發送回原本的 LINE 群組。 |

#### 4.2. 摘要內容需求

| ID | 功能 | 描述 |
| :--- | :--- | :--- |
| FR-8 | **摘要格式** | 摘要必須是條列式，清晰易讀，方便快速掃描。 |
| FR-9 | **摘要中立性** | AI 生成的摘要應專注於事實和要點，避免帶有過多主觀情緒或臆測。 |
| FR-10 | **隱私保護** | 摘要內容不得包含任何可能洩漏用戶真實身份的資訊。Prompt 設計上需明確指示 AI 勿猜測或還原用戶身份。 |

### 5. 非功能需求 (Non-Functional Requirements)

| ID | 需求類別 | 描述 |
| :--- | :--- | :--- |
| NFR-1 | **隱私與安全** | 所有處理流程必須嚴格遵守「匿名化優先」原則。與外部服務（LINE, Gemini）的通訊必須安全。API 金鑰等敏感憑證必須透過 Secret Manager 進行管理。 |
| NFR-2 | **性能** | 從定時任務觸發到使用者在 LINE 中看到摘要，整個過程應在可接受的時間內完成。 |
| NFR-3 | **可靠性與韌性** | 系統需具備容錯能力。當外部 API (如 Gemini) 短暫不可用時，應具備重試機制，並能優雅降級，避免服務完全中斷。 |
| NFR-4 | **可擴展性** | 系統架構應能支持未來用戶量與群組數量的增長，能夠水平擴展。 |

### 6. 系統邏輯與資料流

1.  **接收 (Receive)：** LINE Webhook 接收到使用者在群組中發送的訊息 (`userId`, `text`)。
2.  **匿名化 (Anonymize)：** 應用程式服務層呼叫匿名化模組，將真實 `userId` 轉換為臨時假名「使用者X」。此映射關係存入 Redis Hash 並設定 70 分鐘 TTL。
3.  **儲存 (Store)：** 將 `{ "pseudonym": "使用者X", "timestamp": ..., "text": "..." }` 存入 Redis Sorted Set。
4.  **觸發 (Trigger)：** Cloud Scheduler 在每小時 0 分觸發摘要任務的 API 端點。
5.  **整合 (Aggregate)：** 應用程式從 Redis 讀取過去 60 分鐘的匿名化對話紀錄。
6.  **生成 (Generate)：** 將整合後的對話紀錄組合到提示詞中，呼叫 Gemini API 獲取摘要。
7.  **發送 (Send)：** 透過 LINE `push_message` API 將摘要結果發送回原群組。
8.  **清除 (Expire)：** 70 分鐘後，Redis 中儲存的 `userId` 與假名映射關係因 TTL 到期而自動刪除。

### 7. 範圍與未來規劃 (Scope & Roadmap)

#### 7.1. v1.0 (當前範圍)

* **核心功能：** 實現本文件中定義的所有核心摘要功能。
* **平台：** 僅支援 LINE。
* **內容：** 僅處理文本訊息。
* **配置：** 不提供用戶自訂功能（如摘要頻率、摘要語言等）。

#### 7.2. v1.1 (短期規劃，範圍外)

* **擴展分析能力：** 引入更多元的 Gemini 分析功能，如情緒趨勢分析、關鍵詞提取、行動項目識別等。
* **用戶互動：** 允許用戶透過指令手動觸發摘要，或對摘要品質進行評分。

#### 7.3. v2.0 (長期規劃，範圍外)

* **多平台擴展：** 將核心引擎擴展至 Slack, Discord 等其他通訊平台。
* **多模態支援：** 研究支援圖片內容的摘要與分析。
* **管理後台：** 提供簡單的管理儀表板，讓使用者管理設定。

### 8. 假設與依賴 (Assumptions & Dependencies)

* **依賴項：**
    * 對 LINE Messaging API 的穩定存取。
    * 對 Google Gemini API 的穩定存取。
    * 對 Google Cloud Platform (Cloud Run, Memorystore for Redis, Scheduler) 的穩定存取。
* **假設：**
    * 使用者願意將第三方機器人加入他們的群組。
    * 每小時一次的摘要頻率能滿足大多數用戶的需求。
    * Gemini API 生成的摘要品質與速度能夠滿足產品要求。