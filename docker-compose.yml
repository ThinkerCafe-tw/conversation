version: '3.8'

services:
  app:
    build: .
    ports:
      - "5001:5001"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ENVIRONMENT=production
    env_file:
      - .env
    depends_on:
      - redis
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 自動備份服務
  backup:
    image: alpine:latest
    volumes:
      - redis_data:/data:ro
      - ./backups:/backups
    environment:
      - BACKUP_RETENTION_DAYS=7
    command: |
      sh -c 'while true; do
        echo "Backing up Redis data..."
        tar -czf /backups/redis-backup-$$(date +%Y%m%d-%H%M%S).tar.gz /data
        find /backups -name "redis-backup-*.tar.gz" -mtime +$$BACKUP_RETENTION_DAYS -delete
        echo "Backup completed"
        sleep 86400
      done'
    restart: unless-stopped

  # 監控服務（選用）
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  redis_data:
  prometheus_data:
  grafana_data: